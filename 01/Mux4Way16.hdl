// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor.
 * out = a if sel==00
 *       b if sel==01
 *       c if sel==10
 *       d if sel==11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // effectively a 4-way or of the selected input channels
    Or16(a=or1, b=or2, out=out);
    Or16(a=outa, b=outb, out=or1);
    Or16(a=outc, b=outd, out=or2);
    // Select which channel to use
    // TODO: Is there an easier way to do this?
    //    And16(a=b, b[0..15]=useb, out=outb); causes issues w/ mismatched bus sizes
    And16(a=a, b[0]=usea, b[1]=usea, b[2]=usea, b[3]=usea, b[4]=usea, b[5]=usea, b[6]=usea, b[7]=usea, b[8]=usea, b[9]=usea, b[10]=usea, b[11]=usea, b[12]=usea, b[13]=usea, b[14]=usea, b[15]=usea, out=outa);

    And16(a=b, b[0]=useb, b[1]=useb, b[2]=useb, b[3]=useb, b[4]=useb, b[5]=useb, b[6]=useb, b[7]=useb, b[8]=useb, b[9]=useb, b[10]=useb, b[11]=useb, b[12]=useb, b[13]=useb, b[14]=useb, b[15]=useb, out=outb);

    And16(a=c, b[0]=usec, b[1]=usec, b[2]=usec, b[3]=usec, b[4]=usec, b[5]=usec, b[6]=usec, b[7]=usec, b[8]=usec, b[9]=usec, b[10]=usec, b[11]=usec, b[12]=usec, b[13]=usec, b[14]=usec, b[15]=usec, out=outc);

    And16(a=d, b[0]=used, b[1]=used, b[2]=used, b[3]=used, b[4]=used, b[5]=used, b[6]=used, b[7]=used, b[8]=used, b[9]=used, b[10]=used, b[11]=used, b[12]=used, b[13]=used, b[14]=used, b[15]=used, out=outd);

    // and, get the scalar indicators
    And(a=notsel1, b=notsel0, out=usea);
    And(a=notsel1, b=sel[0], out=useb);
    And(a=sel[1], b=notsel0, out=usec);
    And(a=sel[1], b=sel[0], out=used);
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
}